{"version":3,"file":"static/iframe.dcf57b1ea41ff0043144.bundle.js","sources":["webpack:///./packages/phoenix-buttons/lib/MaterialButton.js"],"sourcesContent":["/* eslint jsx-a11y/label-has-associated-control: 0 */\n/* eslint jsx-a11y/label-has-for: 0 */\n/* eslint react/forbid-prop-types: 0 */\n\nimport * as React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport { string, node, oneOf, func, bool, object } from 'prop-types'\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n})\n\nconst MaterialButton = ({ variant, color, disabled, href, upload, classes, children, onClick }) => {\n  if (!upload) {\n    return (\n      <Button\n        variant={variant}\n        color={color}\n        disabled={disabled}\n        href={href}\n        className={classes.button}\n        onClick={onClick}\n      >\n        {children}\n      </Button>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <input\n        accept=\"image/*\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button variant={variant} component=\"span\" className={classes.button}>\n          Upload\n        </Button>\n      </label>\n    </React.Fragment>\n  )\n}\n\nMaterialButton.defaultProps = {\n  variant: 'text',\n  color: 'inherit',\n  disabled: false,\n  href: '',\n  upload: false,\n  children: null,\n}\n\nMaterialButton.propTypes = {\n  variant: oneOf(['text', 'flat', 'outlined', 'contained', 'raised', 'fab', 'extendedFab']),\n  color: oneOf(['inherit', 'primary', 'secondary', 'default']),\n  disabled: bool,\n  href: string,\n  upload: bool,\n  classes: object.isRequired,\n  children: node,\n  onClick: func.isRequired,\n}\n\nexport default withStyles(styles)(MaterialButton)\n"],"mappings":"AAkBA","sourceRoot":""}